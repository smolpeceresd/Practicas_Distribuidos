package RockPaperScissors;


/**
* RockPaperScissors/GameController_Tie.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from RockPaperScissors.idl
* Thursday, April 2, 2015 7:44:39 PM IST
*/

public class GameController_Tie extends _GameControllerImplBase
{

  // Constructors
  public GameController_Tie ()
  {
  }

  public GameController_Tie (RockPaperScissors.GameControllerOperations impl)
  {
    super ();
    _impl = impl;
  }


  //creates a new instance of game and returns an identifier as well as the ID for the game in the form on an Any
  public String NewGame (org.omg.CORBA.AnyHolder gameIdAny)
  {
    return _impl.NewGame(gameIdAny);
  } // NewGame

  public boolean gameIsReadySynchronous (int GameID)
  {
    return _impl.gameIsReadySynchronous(GameID);
  } // gameIsReadySynchronous


  //client passes in the ID it received from the Any and check if they have been matched with an opponent
  public void gameIsReady (RockPaperScissors.GUICallback callback, int GameID)
  {
    _impl.gameIsReady(callback, GameID);
  } // gameIsReady


  //takes the user's choice and their identifier and returns the winner of the game - synchronous blocking call - used by CLI client
  public String SynchronousResult (int GameID, int move, String userNumber)
  {
    return _impl.SynchronousResult(GameID, move, userNumber);
  } // SynchronousResult


  //asynchronous call which uses callbacks - used by GUI client
  public void Result (RockPaperScissors.GUICallback callback, int GameID, int move, String userNumber)
  {
    _impl.Result(callback, GameID, move, userNumber);
  } // Result

  private RockPaperScissors.GameControllerOperations _impl;

} // class GameController_Tie
